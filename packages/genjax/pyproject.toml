[project]
dependencies = [
    "genjax"
]
name = "genjax"
requires-python = ">=3.11,<4.0"
version = "0.0.0"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
omit = [".*", "*/site-packages/*"]

[tool.coverage.report]
show_missing = true
fail_under = 45

[tool.vulture]
paths = ["src"]
ignore_names = ["cls"]
exclude = ["*/.ipynb_checkpoints/*"]
min_confidence = 70
sort_by_size = true

[tool.pyright]
pythonVersion = "3.11"
venvPath = "."
venv = ".venv"
include = ["src", "tests"]
exclude = ["**/__pycache__"]
defineConstant = { DEBUG = true }
typeCheckingMode = "strict"
deprecateTypingAliases = true

reportMissingTypeStubs = "none"
reportMissingParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"

[tool.ruff]
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
extend-include = ["*.ipynb"]
line-length = 88
indent-width = 4

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
preview = true
extend-select = ["I", "RUF"]
select = ["E4", "E7", "E9", "F"]
# F403 disables errors from `*` imports, which we currently use heavily.
ignore = ["F403", "F405", "F811", "E402", "RUF009", "RUF003"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
preview = true
skip-magic-trailing-comma = false
docstring-code-format = true
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"


# [project]
# authors = [
#     {name = "Aaron Steele", email = "aaron@chi-fro.org"},
# ]
# name = "genjax"
# requires-python = ">=3.11,<4.0"
# version = "0.0.0"
# dependencies = [
#     "jax>=0.4.24",
#     "tensorflow-probability>=0.23.0",
#     "jaxtyping>=0.2.24",
#     "beartype>=0.20.0",
#     "deprecated>=1.2.14",
#     "penzai>=0.2.2",
#     "treescope>=0.1.5",
#     "numpy>=1.22,<2.0.0",
#     "genstudio>=2025.2.1"
# ]

# [tool.pixi.pypi-options]
# no-build = true

# [build-system]
# build-backend = "hatchling.build"
# requires = ["hatchling"]


# [tool.pixi.project]
# channels = ["conda-forge"]
# platforms = ["linux-64", "osx-arm64"]


# [tool.pixi.activation.env]
# XLA_PYTHON_CLIENT_PREALLOCATE = "false"
# XLA_PYTHON_CLIENT_ALLOCATOR = "platform"

# [tool.pixi.environments]
# cpu = { features = ["cpu"]}
# cpu-dev = { features = ["cpu", "dev"] }
# gpu = { features = ["cuda"], solve-group = "cuda" }
# #gpu-dev = { features = ["cuda", "dev"], solve-group = "default" }
# # gpu-docs = { features = ["cuda", "docs"], solve-group = "default" }

# [tool.pixi.pypi-dependencies]
# genjax = { path = ".", editable = true }

# [tool.pixi.dependencies]
# python = ">=3.11,<4.0"

# [tool.pixi.feature.dev.tasks]
# tests = { cmd = [
#     "pytest",
#     "--benchmark-disable",
#     "--ignore",
#     "scratch",
#     "--ignore",
#     "notebooks",
#     "-n",
#     "auto"
# ] }
# coverage-run = { cmd = [
#     "coverage",
#     "run",
#     "-m",
#     "pytest",
#     "--benchmark-disable",
#     "--ignore",
#     "scratch",
# ] }
# coverage-json = { cmd = [
#     "coverage",
#     "json",
#     "--omit",
#     "test*",
# ] }
# coverage-report = { cmd = [
#     "coverage",
#     "report",
#     "--omit",
#     "test*",
# ] }
# xdoctests = { cmd = [
#     "xdoctest",
#     "--modname=genjax",
#     "--command=all",
#     "--colored=1",
# ] }
# safety = { cmd = [
#     "safety",
#     "check",
#     "--ignore",
#     "70612",
#     "--ignore",
#     "73456",
#     "--ignore",
#     "74439",
#     "--ignore",
#     "74735",
#     "--full-report",
# ] }
# ruff-check = { cmd = [
#     "ruff",
#     "check",
#     "--fix",
#     ".",
# ] }
# ruff-format = { cmd = [
#     "ruff",
#     "format",
#     ".",
# ] }
# docs-build = { cmd = [
#     "mkdocs",
#     "build",
#     "--strict",
# ] }


# [tool.pixi.feature.dev.pypi-dependencies]
# coverage = ">=7.0.0,<8.0.0"
# hypothesis = ">=6.119.0,<7.0.0"
# matplotlib = ">=3.6.2,<4.0.0"
# mypy = ">=0.991,<1.0.0"
# pytest = ">=7.2.0,<8.0.0"
# pytest-benchmark = ">=4.0.0,<5.0.0"
# pytest-xdist = { version = ">=3.2.0,<4.0.0", extras = ["psutil"] }
# ruff = ">=0.1.3,<1.0.0"
# safety = "*"
# seaborn = ">=0.12.1,<1.0.0"
# xdoctest = { version = ">=1.1.0,<2.0.0", extras = ["colors"] }
# jupyterlab = ">=4.2.5,<5.0.0"
# jupytext = ">=1.16.2,<2.0.0"
# mkdocs = ">=1.5.3,<2.0.0"
# mkdocs-git-authors-plugin = ">=0.7.2,<1.0.0"
# mkdocs-git-revision-date-localized-plugin = ">=1.1.0,<2.0.0"
# mkdocs-git-committers-plugin-2 = ">=1.1.1,<2.0.0"
# markdown-exec = { version = ">=1.8.3,<2.0.0", extras = ["ansi"] }
# mkdocs-material = { git = "git+https://github.com/probcomp/mkdocs-material-insiders" }
# mkdocstrings-python = { git = "git+https://github.com/probcomp/mkdocstrings-python" }
# black = ">=24.4.2,<25.0.0"
# mkdocs-jupyter = ">=0.25.1,<1.0.0"
# griffe = ">=0.25.5,<1.0.0"

# [tool.pixi.feature.cpu.pypi-dependencies]
# jax = ">=0.4.24,<0.5.0"

# [tool.pixi.feature.cuda]
# platforms = ["linux-64"]
# system-requirements = { cuda = "12.6" }

# [tool.pixi.feature.cuda.target.linux-64.dependencies]
# cudnn = ">=9.7.1.26,<10"

# [tool.pixi.feature.cuda.target.linux-64.pypi-dependencies]
# jax = { version = ">=0.4.35", extras = ["cuda12"] }

# [tool.coverage.paths]
# source = ["src", "*/site-packages"]
# tests = ["tests", "*/tests"]

# [tool.coverage.run]
# omit = [".*", "*/site-packages/*"]

# [tool.coverage.report]
# show_missing = true
# fail_under = 45

# [tool.vulture]
# paths = ["src"]
# ignore_names = ["cls"]
# exclude = ["*/.ipynb_checkpoints/*"]
# min_confidence = 70
# sort_by_size = true

# [tool.pyright]
# pythonVersion = "3.11"
# venvPath = "."
# venv = ".venv"
# include = ["src", "tests"]
# exclude = ["**/__pycache__"]
# defineConstant = { DEBUG = true }
# typeCheckingMode = "strict"
# deprecateTypingAliases = true

# reportMissingTypeStubs = "none"
# reportMissingParameterType = "none"
# reportUnknownArgumentType = "none"
# reportUnknownLambdaType = "none"
# reportUnknownMemberType = "none"
# reportUnknownParameterType = "none"
# reportUnknownVariableType = "none"

# [tool.ruff]
# target-version = "py311"
# exclude = [
#     ".bzr",
#     ".direnv",
#     ".eggs",
#     ".git",
#     ".git-rewrite",
#     ".hg",
#     ".mypy_cache",
#     ".nox",
#     ".pants.d",
#     ".pytype",
#     ".ruff_cache",
#     ".svn",
#     ".tox",
#     ".venv",
#     "__pypackages__",
#     "_build",
#     "buck-out",
#     "build",
#     "dist",
#     "node_modules",
#     "venv",
# ]
# extend-include = ["*.ipynb"]
# line-length = 88
# indent-width = 4

# [tool.ruff.lint.pydocstyle]
# convention = "google"

# [tool.ruff.lint]
# preview = true
# extend-select = ["I", "RUF"]
# select = ["E4", "E7", "E9", "F"]
# # F403 disables errors from `*` imports, which we currently use heavily.
# ignore = ["F403", "F405", "F811", "E402", "RUF009", "RUF003"]
# fixable = ["ALL"]
# unfixable = []
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# [tool.ruff.format]
# preview = true
# skip-magic-trailing-comma = false
# docstring-code-format = true
# quote-style = "double"
# indent-style = "space"
# line-ending = "auto"

# [tool.mypy]
# strict = true
# warn_unreachable = true
# pretty = true
# show_column_numbers = true
# show_error_codes = true
# show_error_context = true

# [tool.poetry-dynamic-versioning]
# enable = true
# vcs = "git"
# style = "pep440"
